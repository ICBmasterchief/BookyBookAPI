// <auto-generated />
using System;
using BookyBook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookyBook.Data.Migrations
{
    [DbContext(typeof(BookyBookContext))]
    [Migration("20240425204053_AddedRoles")]
    partial class AddedRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookyBook.Models.Book", b =>
                {
                    b.Property<int>("IdNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumber"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("IdNumber");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            IdNumber = 10001,
                            Author = "J. R. R. Tolkien",
                            Copies = 1,
                            Genre = "Fantasia",
                            Score = 8.8m,
                            Title = "La comunidad del anillo",
                            Year = 1954
                        },
                        new
                        {
                            IdNumber = 10002,
                            Author = "Arturo Perez Reverte",
                            Copies = 1,
                            Genre = "Novela historica",
                            Score = 7.44m,
                            Title = "El capitan alatriste",
                            Year = 1996
                        },
                        new
                        {
                            IdNumber = 10003,
                            Author = "Mary Shelley",
                            Copies = 2,
                            Genre = "Novela gotica",
                            Score = 7.8m,
                            Title = "Frankenstein",
                            Year = 1818
                        },
                        new
                        {
                            IdNumber = 10004,
                            Author = "J. K. Rowling",
                            Copies = 1,
                            Genre = "Fantasia",
                            Score = 8m,
                            Title = "Harry Potter y la piedra filosofal",
                            Year = 1997
                        },
                        new
                        {
                            IdNumber = 10005,
                            Author = "Laura Gallego Garcia",
                            Copies = 3,
                            Genre = "Fantasia",
                            Score = 7.2m,
                            Title = "El libro de los portales",
                            Year = 2013
                        },
                        new
                        {
                            IdNumber = 10006,
                            Author = "Patrick Rothfuss",
                            Copies = 4,
                            Genre = "Fantasia",
                            Score = 8.1m,
                            Title = "El nombre del viento",
                            Year = 2007
                        },
                        new
                        {
                            IdNumber = 10007,
                            Author = "John Grisham",
                            Copies = 2,
                            Genre = "Thriller",
                            Score = 7.7m,
                            Title = "El informe pelicano",
                            Year = 1992
                        },
                        new
                        {
                            IdNumber = 10008,
                            Author = "Stephen King",
                            Copies = 1,
                            Genre = "Terror",
                            Score = 7.9m,
                            Title = "El resplandor",
                            Year = 1977
                        });
                });

            modelBuilder.Entity("BookyBook.Models.Borrowing", b =>
                {
                    b.Property<int>("IdNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumber"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BorrowingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateToReturn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PenaltyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Returned")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdNumber");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrowings");

                    b.HasData(
                        new
                        {
                            IdNumber = 1,
                            BookId = 10001,
                            BorrowingDate = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateToReturn = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PenaltyFee = 0m,
                            Returned = true,
                            ReturnedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1111
                        },
                        new
                        {
                            IdNumber = 2,
                            BookId = 10003,
                            BorrowingDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateToReturn = new DateTime(2024, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PenaltyFee = 10m,
                            Returned = true,
                            ReturnedDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1112
                        },
                        new
                        {
                            IdNumber = 3,
                            BookId = 10004,
                            BorrowingDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateToReturn = new DateTime(2024, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PenaltyFee = 0m,
                            Returned = false,
                            UserId = 1111
                        },
                        new
                        {
                            IdNumber = 4,
                            BookId = 10005,
                            BorrowingDate = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateToReturn = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PenaltyFee = 0m,
                            Returned = true,
                            ReturnedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1113
                        },
                        new
                        {
                            IdNumber = 5,
                            BookId = 10008,
                            BorrowingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateToReturn = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PenaltyFee = 10m,
                            Returned = true,
                            ReturnedDate = new DateTime(2024, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1114
                        },
                        new
                        {
                            IdNumber = 6,
                            BookId = 10006,
                            BorrowingDate = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateToReturn = new DateTime(2024, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PenaltyFee = 0m,
                            Returned = false,
                            UserId = 1113
                        });
                });

            modelBuilder.Entity("BookyBook.Models.User", b =>
                {
                    b.Property<int>("IdNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumber"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PenaltyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNumber");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdNumber = 1111,
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "admin",
                            PenaltyFee = 0m,
                            RegistrationDate = new DateTime(2024, 4, 3, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "admin"
                        },
                        new
                        {
                            IdNumber = 1112,
                            Email = "ignaciocasaus1cns@gmail.com",
                            Name = "Ignacio",
                            Password = "patata",
                            PenaltyFee = 0m,
                            RegistrationDate = new DateTime(2024, 4, 4, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "user"
                        },
                        new
                        {
                            IdNumber = 1113,
                            Email = "emaildealex@gmail.com",
                            Name = "Alex",
                            Password = "pimiento",
                            PenaltyFee = 0m,
                            RegistrationDate = new DateTime(2024, 4, 5, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            Role = "user"
                        },
                        new
                        {
                            IdNumber = 1114,
                            Email = "pepe@pepe.com",
                            Name = "Pepe",
                            Password = "pepe",
                            PenaltyFee = 10m,
                            RegistrationDate = new DateTime(2024, 4, 15, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Role = "user"
                        });
                });

            modelBuilder.Entity("BookyBook.Models.Borrowing", b =>
                {
                    b.HasOne("BookyBook.Models.Book", "Book")
                        .WithMany("Borrowings")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookyBook.Models.User", "User")
                        .WithMany("Borrowings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookyBook.Models.Book", b =>
                {
                    b.Navigation("Borrowings");
                });

            modelBuilder.Entity("BookyBook.Models.User", b =>
                {
                    b.Navigation("Borrowings");
                });
#pragma warning restore 612, 618
        }
    }
}
